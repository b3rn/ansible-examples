---
# Configure and deploy the load balancer(s).
- hosts: localhost
  connection: local 
  gather_facts: False

  vars_files:
  - group_vars/all
  - group_vars/secret.yaml
  roles:
   - elb
  
  tags: 
  - lb

## This playbook deploys the whole application stack in this site.  

# Configure and deploy database servers.
- hosts: tag_ansible_group_windows_dbservers
  connection: winrm

  vars_files:
  - group_vars/all
  - group_vars/secret.yaml
  vars:
    ansible_ssh_port : 5986

  roles:
  - mssql

  tags: 
  - db

# Configure and deploy the web servers. Note that we include two roles here, 
# the 'base-apache' role which simply sets up Apache, and 'web' which includes
# our example web application.
- hosts: tag_ansible_group_windows_webservers
  connection: winrm

  vars_files:
  - group_vars/all
  - group_vars/secret.yaml
  vars:
    ansible_ssh_port : 5986

  tasks:
  - name: firewall http
    action: win_firewall_rule
    args:
      name: http
      enable: yes
      localport: 80
      action: allow
      direction: out

  roles:
  - iis 
  - web

  tags: 
  - web

# Add the webservers to the load balancer(s)
- hosts: tag_ansible_group_windows_webservers
  connection: winrm
  gather_facts: False


  vars:
    ansible_ssh_port : 5986
  vars_files:
    - group_vars/all
    - group_vars/secret.yaml
  tasks:

#  - name: Wait for webserver to come up
#    wait_for: host={{ inventory_hostname }} port=80 state=started timeout=80

  - name: Add host to load balancing pool 
    local_action: 
      module: ec2_elb
      region: "{{ ec2_region }}"
      instance_id: "{{ ec2_id }}"
      ec2_elbs: "ansible-windows-demo-lb"
      wait_timeout: 330
      state: 'present'

  tags:
  - lb
